{"version":3,"sources":["utils/HTTP.js","constants/Config.js","actions/auth.js","assets/Logoblue.png","views/pages/resetPassword/ResetPassword.js"],"names":["HTTP","method","uri","data","headers","params","url","config","API_URL","query","console","log","axios","response","module","exports","checkSession","dispatch","Promise","resolve","reject","type","SHOW_LOADER","token","localStorage","getItem","Authorization","then","GET_ME_SUCCESS","catch","error","finally","HIDE_LOADER","LOGOUT_SUCCESS","login","LOGIN_SUCCESS","setItem","authToken","LOGIN_FAILED","forgotPassword","resetPassword","logout","connect","actions","bindActionCreators","_resetPassword","props","useState","password","confirmPassword","state","setState","loginFailedError","showError","passwordMisMatch","setPasswordError","onTextChange","e","target","name","value","onResetPassword","location","search","notification","message","description","duration","placement","substring","split","length","recoveryToken","passRegex","repsonse","history","replace","regex","RegExp","match","className","md","src","logo","fluid","style","width","height","padding","onChange","userPassword","placeholder","autoComplete","xs","color","onClick","disabled","fontSize","marginTop"],"mappings":"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","file":"static/js/31.ffe276de.chunk.js","sourcesContent":["import axios from 'axios';\nimport config from '../constants/Config';\n\nexport async function HTTP (method, uri, data, headers = null, params = null) {\n\n    let url = (config.API_URL + uri);\n\n\n    let query = {\n        method: method,\n        url: url\n    };\n\n    if (headers !== null) {\n        query.headers = headers;\n    }\n\n    if (params !== null) {\n        query.params = params;\n    }\n\n    if (method === 'post' || method === 'put' || method === 'delete' || method === 'patch') {\n        query.data = data;\n    }\n\n    console.log(\"Query after header & params: \", query);\n\n    const response = await axios(query);\n\n    console.log(\"response from axios received: \");\n\n    return response;\n\n}\n","const APPCONFIG = {\n    // API_URL: process.env.REACT_APP_API_URL,\n    API_URL: 'http://3.140.153.110:4100',//dev\n    // SOCKET_URL: ENVIRONMENT.REACT_APP_API_URL\n};\n\nmodule.exports = APPCONFIG;","/*\n* Action for feature todos\n* */\n\nimport { HTTP } from './../utils/HTTP';\n\nimport {\n  LOGIN_SUCCESS,\n  LOGIN_FAILED,\n  LOGOUT_SUCCESS,\n  SHOW_LOADER,\n  HIDE_LOADER,\n  GET_ME_SUCCESS,\n  GET_ME_FAILED\n} from './../constants/actionTypes';\n\n\nexport function checkSession() {\n  return function (dispatch) {\n    return new Promise(function (resolve, reject) {\n      dispatch({\n        type: SHOW_LOADER,\n      });\n      const token = localStorage.getItem('auth');\n      if (token) {\n        HTTP('get', '/user/session', null, { Authorization: `Bearer ${token}` })\n          .then(function (response) {\n            console.log(\"ME RESPONSE =>>>\", response)\n            dispatch({\n              type: GET_ME_SUCCESS,\n              data: response.data\n            });\n            resolve(response.data);\n          })\n          .catch(error => {\n            console.log(\"ME RESPONSE Error =>>>\", error.response)\n            reject(error.response);\n          })\n          .finally(() => {\n            dispatch({\n              type: HIDE_LOADER,\n            });\n          })\n      } else {\n        dispatch({\n          type: LOGOUT_SUCCESS,\n        });\n      }\n    });\n  };\n}\n\n\nexport function login(data) {\n  return function (dispatch) {\n    return new Promise(function (resolve, reject) {\n      dispatch({\n        type: SHOW_LOADER,\n      });\n      HTTP('post', '/admin/login', data)\n        .then(function (response) {\n          console.log(\"LOGIN ADMIN RESPONSE =>>>\", response)\n          dispatch({\n            type: LOGIN_SUCCESS,\n            data: response.data.data ? response.data.data : response.data \n          });\n          localStorage.setItem('auth', response.data.data.authToken);\n          resolve(response.data.data);\n        })\n        .catch(error => {\n          console.log(\"LOGIN ADMIN RESPONSE Error =>>>\", error)\n          dispatch({\n            type: LOGIN_FAILED,\n          });\n          reject(error.response);\n        })\n        .finally(() => {\n          dispatch({\n            type: HIDE_LOADER,\n          });\n        })\n    });\n  };\n}\n\nexport function forgotPassword(data) {\n  return function (dispatch) {\n    return new Promise(function (resolve, reject) {\n      dispatch({\n        type: SHOW_LOADER,\n      });\n      HTTP('post', '/user/forgot/password', data)\n        .then(function (response) {\n          console.log(\"forgot password RESPONSE =>>>\", response)\n          resolve(response.data);\n        })\n        .catch(error => {\n          console.log(\"forgot password RESPONSE Error =>>>\", error);\n          reject(error.response);\n        })\n        .finally(() => {\n          dispatch({\n            type: HIDE_LOADER,\n          });\n        })\n    });\n  };\n}\n\nexport function resetPassword(data) {\n  return function (dispatch) {\n    return new Promise(function (resolve, reject) {\n      dispatch({\n        type: SHOW_LOADER,\n      });\n      HTTP('post', '/user/reset/password', data)\n        .then(function (response) {\n          console.log(\"RESET password RESPONSE =>>>\", response)\n          resolve(response.data.data);\n        })\n        .catch(error => {\n          console.log(\"RESET password RESPONSE Error =>>>\", error);\n          reject(error.response);\n        })\n        .finally(() => {\n          dispatch({\n            type: HIDE_LOADER,\n          });\n        })\n    });\n  };\n}\n\nexport function logout(data) {\n  return function (dispatch) {\n    return new Promise(function (resolve, reject) {\n      dispatch({\n        type: LOGOUT_SUCCESS,\n      });\n      resolve();\n    });\n  };\n}\n\n","export default __webpack_public_path__ + \"static/media/Logoblue.7909d40d.png\";","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from 'redux';\nimport { resetPassword } from '../../../actions/auth';\nimport {\n  CAlert,\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CRow,\n  CImg\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport logo from '../../../assets/Logoblue.png';\nimport { notification } from 'antd';\n\nconst ResetPassword = (props) => {\n  console.log(props,'props===========');\n  const [state, setState] = useState({\n    password: '',\n    confirmPassword: ''\n  });\n\n  const [loginFailedError, showError] = useState(null);\n  const [passwordMisMatch, setPasswordError] = useState(null);\n\n  const onTextChange = (e) => {\n    showError(null);\n    setState({\n      ...state,\n      [e.target.name]: e.target.value,\n    });\n    setPasswordError(null);\n  }\n\n  const onResetPassword = async () => {\n    showError(null);\n    try {\n\n      let query = props.location.search;\n\n      console.log(\"query\",query);\n\n      if (!query) {\n        console.log(\"1-----------------\",query)\n        return notification['error']({\n          message: 'Invalid link',\n          description: 'You opened invalid link.',\n          duration: 3,\n          placement:'bottomRight'\n        });\n        // return props.history.replace('/login');\n      }\n\n      query = query.substring(1).split(\"=\");\n\n      if (query.length > 2 || query[0] !== 'recoveryToken') {\n        console.log(\"2-----------------\",query)\n        return notification['error']({\n          message: 'Invalid link',\n          description: 'You opened invalid link.',\n          duration: 3,\n          placement:'bottomRight'\n        });\n        // return props.history.replace('/login');\n      }\n\n      console.log(\"query==========?\",query);\n      const data = {\n        password: state.password,\n        recoveryToken : query[1]\n      };\n\n      if (state.password !== state.confirmPassword) {\n        return setPasswordError('Confirm password & new password must match');\n      }\n      if(!passRegex){\n        return setPasswordError('Password must contain eight characters, at least one letter, one number and one special character');\n      }\n\n      const repsonse = await props.actions._resetPassword(data);\n      \n      console.log(\"=======Response password\", repsonse);\n      \n      notification['success']({\n        message: 'Password Reset',\n        description: 'Your password has been reset please login.',\n        duration: 3,\n      });\n\n      props.history.replace('/login');\n\n      showError(null);\n    } catch (error) {\n      console.log('reset error', error);\n      showError(error.data ? error.data.message : error);\n    }\n  }\n\n  const passRegex = () => {\n    const regex = new RegExp(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/);\n    if(state.password.match(regex)){\n      console.log(\"passowrd validate\");\n      return true;\n    }else{\n      console.log(\"failed\");\n      return false;\n    }\n  }\n\n  const disableButton = () => {\n    console.log(state);\n    if (state.password !== state.confirmPassword) {\n      return true;\n    }\n    return false;\n  }\n\n  return (\n    <div className=\"c-app c-default-layout flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md=\"5\">\n            <CCardGroup>\n              <CCard className=\"p-4\">\n                <CCardBody>\n                  <CImg\n                    src={logo}\n                    fluid\n                    className=\"c-sidebar-brand-full\"\n                    style={{ width: '170px', height: '70px', padding: '5px 0px' }}\n                  />\n                  <CForm>\n                    <p className=\"text-muted\">Reset Password</p>\n                    <CInputGroup className=\"mb-4\">\n                      <CInputGroupPrepend>\n                        <CInputGroupText>\n                          <CIcon name=\"cil-lock-locked\" />\n                        </CInputGroupText>\n                      </CInputGroupPrepend>\n                      <CInput type=\"password\" onChange={onTextChange} name='password' value={state.userPassword} placeholder=\"New Password\" autoComplete=\"current-password\" />\n                    </CInputGroup>\n                    <CInputGroup className=\"mb-4\">\n                      <CInputGroupPrepend>\n                        <CInputGroupText>\n                          <CIcon name=\"cil-lock-locked\" />\n                        </CInputGroupText>\n                      </CInputGroupPrepend>\n                      <CInput type=\"password\" onChange={onTextChange} name='confirmPassword' value={state.userPassword} placeholder=\"Confirm Password\" autoComplete=\"current-password\" />\n                    </CInputGroup>\n                    <CRow>\n                      <CCol xs=\"6\">\n                        <CButton color=\"primary\" onClick={onResetPassword} className=\"px-4\"   disabled={disableButton()}>Reset Password</CButton>\n                      </CCol>\n                    </CRow>\n                    <CRow>\n                      <CCol xs=\"12\">\n                        <span style={{fontSize:'11px',color:'gray'}}>Password must contain eight characters, at least one letter, one number and one special character</span>\n                      </CCol>\n                    </CRow>\n                  </CForm>\n                  {\n                    loginFailedError &&\n                    <CAlert style={{ marginTop: '10px' }} color=\"danger\">\n                      {loginFailedError}\n                  </CAlert>\n                  }\n                  {\n                    passwordMisMatch &&\n                    <CAlert style={{ marginTop: '10px' }} color=\"danger\">\n                      {passwordMisMatch}\n                  </CAlert>\n                  }\n                </CCardBody>\n              </CCard>\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\nfunction mapDispatchToProp(dispatch) {\n  return {\n      actions: bindActionCreators({\n          _resetPassword: (data) => resetPassword(data),\n          // _forgotPassword: (data) => forgotPassword(data)\n      }, dispatch)\n  }\n}\n\nexport default connect(null, mapDispatchToProp)(ResetPassword);\n"],"sourceRoot":""}