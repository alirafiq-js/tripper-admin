{"version":3,"sources":["views/bus/Buses.js"],"names":["connect","state","console","log","buses","loader","allBuses","isLoading","loading","dispatch","actions","bindActionCreators","_getAllBus","data","getAllBus","_getFilterBus","getFilterBus","_addBus","addBus","_deleteBus","deleteBus","_updateBus","updateBus","props","Form","useForm","history","useHistory","queryPage","useLocation","search","match","currentPage","Number","useState","page","setPage","limit","searchText","setSearchText","isEditingBus","editingBusId","openModal","busName","busSeats","setState","useEffect","getBuses","initState","_page","response","_searchByText","onDeleteBus","driver","_id","notification","message","placement","handleOk","name","seats","id","userDataArray","totalPage","pages","itemsPerPage","xl","xs","md","onChange","e","target","value","placeholder","ghost","onClick","type","style","float","marginBottom","items","size","fields","key","_classes","_style","padding","width","label","hover","striped","activePage","clickableRows","scopedSlots","item","moment","created","format","onEdit","Modal","confirm","title","okText","okType","cancelText","onOk","onCancel","error","showDeleteDialog","marginLeft","onActivePageChange","newPage","push","doubleArrows","align","visible","footer"],"mappings":"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","file":"static/js/56.34d42f63.chunk.js","sourcesContent":["import React, { useState, useEffect, lazy } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from 'redux';\nimport { getAllBus, getFilterBus, addBus, deleteBus, updateBus } from '../../actions/';\nimport moment from 'moment';\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CPagination,\n  CInput,\n} from '@coreui/react';\nimport { Button, Modal, Form, notification, Input } from 'antd';\n\n\nconst Buses = (props) => {\n  const [form] = Form.useForm();\n  const formRef = React.createRef();\n  console.log('Props in Bus', props);\n  const history = useHistory()\n  const queryPage = useLocation().search.match(/page=([0-9]+)/, '')\n  const currentPage = Number(queryPage && queryPage[1] ? queryPage[1] : 1)\n  const [page, setPage] = useState(currentPage)\n  const [limit, setLimit] = useState(10)\n  const [searchText, setSearchText] = useState(null);\n  const [state, setState] = useState({\n    isEditingBus: false,\n    editingBusId: null,\n    openModal: false,\n    busName: '',\n    busSeats: ''\n  });\n\n  const layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n  };\n\n  const pageChange = newPage => {\n    currentPage !== newPage && history.push(`/drivers?page=${newPage}`)\n    setPage(newPage);\n    getBuses(newPage);\n  }\n\n  useEffect(() => {\n    currentPage !== page && setPage(currentPage);\n    getBuses(page);\n  }, []);\n\n\n  const initState = () => {\n    setState({\n      isEditingBus: false,\n      editingBusId: null,\n      busName: '',\n      busSeats: '',\n      openModal: false,\n    })\n  }\n  const getBuses = async (_page) => {\n    try {\n      const data = {\n        page: _page, limit, searchText,\n      }\n      const response = await props.actions._getAllBus(data);\n\n      console.log('========> get all bus repsonse', response);\n    } catch (error) {\n      console.log(\"Error in get list\", error);\n    }\n\n  }\n\n  const _searchByText = async ()=>{\n    const data = {\n      page: page,\n      limit,\n      searchText,\n    }\n    const response = await props.actions._getFilterBus(data);\n  }\n\n  const showModal = () => {\n    setState({\n      ...state,\n      openModal: true\n    });\n  }\n\n  const onEdit = (item) => {\n    console.log('---------item',item);\n    setState({\n      ...state,\n      busName: item.name,\n      busSeats: item.seats,\n      editingBusId: item._id,\n      isEditingBus: true,\n      openModal: true,\n    })\n  }\n\n\n  const showDeleteDialog = (item) => {\n    try {\n        Modal.confirm({\n          title: 'Are you sure delete this bus?',\n          okText: 'Yes',\n          okType: 'danger',\n          cancelText: 'No',\n          onOk: () => onDeleteBus(item),\n          onCancel() {\n            console.log('Cancel');\n          },\n        });\n\n    } catch (error) {\n\n    }\n  }\n\n  const onDeleteBus = async (driver) => {\n    try {\n      const removeBus = await props.actions._deleteBus(driver._id);\n      // getDrivers(currentPage);\n      initState();\n    } catch (error) {\n      console.log(error);\n      notification['error']({\n         message: (error.response && error.response.data) ?  error.response.data.message : 'something went wrong',\n         placement:'bottomRight',\n      });\n      initState();\n    }\n\n  }\n\n  const handleOk = async () => {\n    try {\n\n      if (state.isEditingBus) {\n        const data = {\n          name: state.busName,\n          seats: state.busSeats,\n        };\n        const updateResponse = await props.actions._updateBus({ id: state.editingBusId, data });\n        getBuses(currentPage);\n        initState();\n      } else {\n        \n        const data = {\n          name: state.busName,\n          seats: state.busSeats\n        };\n        const addResponse  = await props.actions._addBus(data);\n        getBuses(currentPage);\n        initState();\n      }\n    } catch (error) {\n      console.log(error);\n      notification['error']({\n         message: (error.response && error.response.data) ?  error.response.data.message : 'something went wrong',\n         placement:'bottomRight',\n      });\n      initState();\n    }\n\n  }\n\n  const userDataArray = (props.allBuses && props.allBuses.data) ? props.allBuses.data : [];\n  const totalPage = (props.allBuses && props.allBuses.pages) ? props.allBuses.pages : 1;\n  const itemsPerPage = (props.allBuses && props.allBuses.limit) ? props.allBuses.limit : 10;\n  console.log('========userDataArray', userDataArray, totalPage, itemsPerPage);\n\n  return (\n    <>\n      <CCard>\n        <CCardBody>\n          <CRow>\n            <CCol xl={12}>\n              <CCard>\n                <CCardHeader>\n                  Bus\n                </CCardHeader>\n                <CCardBody>\n                  <CRow>\n                    <CCol xs=\"12\" md=\"6\">\n                      <CRow>\n                        <CCol xs=\"12\" md=\"6\">\n                        <CInput onChange={(e)=>setSearchText(e.target.value)} id=\"company\" placeholder=\"Name/Phone\" />\n                        </CCol>\n                        <CCol xs=\"12\" md=\"6\">\n                          <Button ghost onClick={_searchByText}  type='primary'>Search</Button>\n                        </CCol>\n                      </CRow>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"6\">\n                      <Button type=\"primary\" onClick={showModal} style={{ float: 'right', marginBottom: '18px' }} ghost>Add</Button>\n                    </CCol>\n                  </CRow>\n                  <CDataTable\n                    items={userDataArray}\n                    loading={props.isLoading}\n                    size='lg'\n                    fields={[\n                      { key: 'name', _classes: 'font-weight-bold', _style: { padding: '0px 30px', width: '250px' } },\n                      // 'email',\n                      { key: 'seats', label: 'Seats' },\n                      // 'location',\n                      // { key: 'signUpVerificationStatus', label: 'Status' },\n                      // { key: 'selected_peer_group', label: 'Selected Peer Group', _style: { width: '250px' } },\n                      { key: 'created', label: 'Created', _style: { width: '300px' } },\n                      'actions'\n                    ]}\n                    hover\n                    striped\n                    itemsPerPage={itemsPerPage}\n                    activePage={page}\n                    clickableRows\n                    scopedSlots={{\n                        'created':\n                        (item) => (\n                          <td>\n                              {moment(item.created).format('Do MMM YYYY hh:mm a')}\n                          </td>\n                        ),\n                        'actions':\n                        (item) => (\n                          <td>\n                            <div>\n                              <Button type=\"primary\" onClick={() => onEdit(item)} ghost>Edit</Button>\n                              <Button type=\"danger\" onClick={() => showDeleteDialog(item)} style={{ marginLeft: '5px' }} ghost>Delete</Button>\n                            </div>\n                          </td>\n                        ),\n                    }}\n                  />\n                  <CPagination\n                    activePage={page}\n                    onActivePageChange={pageChange}\n                    pages={totalPage}\n                    doubleArrows={false}\n                    align=\"center\"\n                  />\n                </CCardBody>\n              </CCard>\n              <Modal\n                visible={state.openModal}\n                title=\"Bus\"\n                onCancel={initState}\n                footer={[\n                  state.isEditingBus ?\n                    <Button key=\"submit\" type=\"primary\" ghost loading={props.isLoading} size=\"large\" onClick={handleOk}>Update</Button>\n                    :\n                    <Button key=\"submit\" type=\"primary\" ghost loading={props.isLoading} size=\"large\" onClick={handleOk}>Add</Button>\n                ]}\n              >\n                <CRow>\n                  <CCol xs=\"12\" md=\"6\">\n                    <CRow>\n                      <CCol xs=\"12\" md=\"12\">\n                        <CInput style={{ marginBottom: '20px' }} value={state.busName} name='busName' onChange={(e) => setState({ ...state, busName: e.target.value })} placeholder='Enter bus name' />\n                      </CCol>\n                    </CRow>\n                    <CRow>\n                      <CCol xs=\"12\" md=\"12\">\n                      <CInput value={state.busSeats} type='number' name='busSeats' onChange={(e) => setState({ ...state, busSeats: e.target.value })} placeholder='Enter seats count' />\n                      </CCol>\n                    </CRow>\n                  </CCol>\n                </CRow>\n              </Modal>\n            </CCol>\n          </CRow>\n        </CCardBody>\n      </CCard>\n    </>\n  )\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({\n      _getAllBus: (data) => getAllBus(data),\n      _getFilterBus: (data) => getFilterBus(data),\n      _addBus: (data) => addBus(data),\n      _deleteBus: (data) => deleteBus(data),\n      _updateBus: (data) => updateBus(data),\n    }, dispatch)\n  }\n}\n\nfunction mapStateToProps(state) {\n  console.log(\"==========> Bus\",state);\n  const { buses, loader } = state;\n  return {\n    allBuses: buses.allBuses,\n    isLoading: loader.loading\n\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Buses);\n"],"sourceRoot":""}