{"version":3,"sources":["utils/HTTP.js","constants/Config.js","actions/auth.js","actions/drivers.js","actions/bus.js","actions/dashboard.js","actions/shift.js"],"names":["HTTP","method","uri","data","headers","params","url","config","API_URL","query","console","log","axios","response","module","exports","checkSession","dispatch","Promise","resolve","reject","type","SHOW_LOADER","token","localStorage","getItem","Authorization","then","GET_ME_SUCCESS","catch","error","finally","HIDE_LOADER","LOGOUT_SUCCESS","login","LOGIN_SUCCESS","setItem","authToken","LOGIN_FAILED","forgotPassword","resetPassword","logout","getAllDrivers","page","limit","searchText","DRIVERS_GET_SUCCESS","getFilterDriver","DRIVERS_EMPTY_SUCCESS","getUserDetails","id","user_id","DRIVERS_GET_DETAILS_SUCCESS","deleteDriver","DRIVERS_DELETE_SUCCESS","addDriver","updateDriver","getAllBus","BUS_GET_SUCCESS","getFilterBus","BUS_EMPTY_SUCCESS","deleteBus","BUS_DELETE_SUCCESS","addBus","updateBus","getDashboardStats","DASHBOARD_STATS_GET_SUCCESS","minimizeSideBar","toggle","TOGGLE_SIDEBAR","getAllShift","SHIFT_GET_SUCCESS","getFilterShift","SHIFT_EMPTY_SUCCESS","getShiftDetails","SHIFT_GET_DETAILS_SUCCESS","deleteShift","SHIFT_DELETE_SUCCESS","addShift","updateShift"],"mappings":"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","file":"static/js/9.c22daab5.chunk.js","sourcesContent":["import axios from 'axios';\nimport config from '../constants/Config';\n\nexport async function HTTP (method, uri, data, headers = null, params = null) {\n\n    let url = (config.API_URL + uri);\n\n\n    let query = {\n        method: method,\n        url: url\n    };\n\n    if (headers !== null) {\n        query.headers = headers;\n    }\n\n    if (params !== null) {\n        query.params = params;\n    }\n\n    if (method === 'post' || method === 'put' || method === 'delete' || method === 'patch') {\n        query.data = data;\n    }\n\n    console.log(\"Query after header & params: \", query);\n\n    const response = await axios(query);\n\n    console.log(\"response from axios received: \");\n\n    return response;\n\n}\n","const APPCONFIG = {\n    // API_URL: process.env.REACT_APP_API_URL,\n    API_URL: 'http://3.140.153.110:4100',//dev\n    // SOCKET_URL: ENVIRONMENT.REACT_APP_API_URL\n};\n\nmodule.exports = APPCONFIG;","/*\n* Action for feature todos\n* */\n\nimport { HTTP } from './../utils/HTTP';\n\nimport {\n  LOGIN_SUCCESS,\n  LOGIN_FAILED,\n  LOGOUT_SUCCESS,\n  SHOW_LOADER,\n  HIDE_LOADER,\n  GET_ME_SUCCESS,\n  GET_ME_FAILED\n} from './../constants/actionTypes';\n\n\nexport function checkSession() {\n  return function (dispatch) {\n    return new Promise(function (resolve, reject) {\n      dispatch({\n        type: SHOW_LOADER,\n      });\n      const token = localStorage.getItem('auth');\n      if (token) {\n        HTTP('get', '/user/session', null, { Authorization: `Bearer ${token}` })\n          .then(function (response) {\n            console.log(\"ME RESPONSE =>>>\", response)\n            dispatch({\n              type: GET_ME_SUCCESS,\n              data: response.data\n            });\n            resolve(response.data);\n          })\n          .catch(error => {\n            console.log(\"ME RESPONSE Error =>>>\", error.response)\n            reject(error.response);\n          })\n          .finally(() => {\n            dispatch({\n              type: HIDE_LOADER,\n            });\n          })\n      } else {\n        dispatch({\n          type: LOGOUT_SUCCESS,\n        });\n      }\n    });\n  };\n}\n\n\nexport function login(data) {\n  return function (dispatch) {\n    return new Promise(function (resolve, reject) {\n      dispatch({\n        type: SHOW_LOADER,\n      });\n      HTTP('post', '/admin/login', data)\n        .then(function (response) {\n          console.log(\"LOGIN ADMIN RESPONSE =>>>\", response)\n          dispatch({\n            type: LOGIN_SUCCESS,\n            data: response.data.data ? response.data.data : response.data \n          });\n          localStorage.setItem('auth', response.data.data.authToken);\n          resolve(response.data.data);\n        })\n        .catch(error => {\n          console.log(\"LOGIN ADMIN RESPONSE Error =>>>\", error)\n          dispatch({\n            type: LOGIN_FAILED,\n          });\n          reject(error.response);\n        })\n        .finally(() => {\n          dispatch({\n            type: HIDE_LOADER,\n          });\n        })\n    });\n  };\n}\n\nexport function forgotPassword(data) {\n  return function (dispatch) {\n    return new Promise(function (resolve, reject) {\n      dispatch({\n        type: SHOW_LOADER,\n      });\n      HTTP('post', '/user/forgot/password', data)\n        .then(function (response) {\n          console.log(\"forgot password RESPONSE =>>>\", response)\n          resolve(response.data);\n        })\n        .catch(error => {\n          console.log(\"forgot password RESPONSE Error =>>>\", error);\n          reject(error.response);\n        })\n        .finally(() => {\n          dispatch({\n            type: HIDE_LOADER,\n          });\n        })\n    });\n  };\n}\n\nexport function resetPassword(data) {\n  return function (dispatch) {\n    return new Promise(function (resolve, reject) {\n      dispatch({\n        type: SHOW_LOADER,\n      });\n      HTTP('post', '/user/reset/password', data)\n        .then(function (response) {\n          console.log(\"RESET password RESPONSE =>>>\", response)\n          resolve(response.data.data);\n        })\n        .catch(error => {\n          console.log(\"RESET password RESPONSE Error =>>>\", error);\n          reject(error.response);\n        })\n        .finally(() => {\n          dispatch({\n            type: HIDE_LOADER,\n          });\n        })\n    });\n  };\n}\n\nexport function logout(data) {\n  return function (dispatch) {\n    return new Promise(function (resolve, reject) {\n      dispatch({\n        type: LOGOUT_SUCCESS,\n      });\n      resolve();\n    });\n  };\n}\n\n","import { HTTP } from '../utils/HTTP';\n\nimport {\n    DRIVERS_GET_SUCCESS,\n    BOOKING_MANAGER_GET_SUCCESS,\n    SHOW_LOADER,\n    HIDE_LOADER,\n    SAVE_ONLINE_USER,\n    DRIVERS_EMPTY_SUCCESS,\n    DRIVERS_DELETE_SUCCESS,\n    DRIVERS_GET_DETAILS_SUCCESS,\n    REPORT_DRIVERS_GET_SUCCESS,\n} from '../constants/actionTypes';\n\n\nexport function getAllDrivers({ page, limit, searchText }) {\n\n    return function (dispatch) {\n        return new Promise(async function (resolve, reject) {\n            dispatch({\n                type: SHOW_LOADER,\n            });\n            const token = localStorage.getItem('auth');\n            let uri =  `/driver/list/?page=${page}&limit=${limit}`;\n            if(searchText){\n                uri = `${uri}&search=${searchText}`\n            }\n            HTTP('get',uri, null, { Authorization: `Bearer ${token}` })\n                .then(function (response) {\n                    console.log(\"response in  drivers ==>>\", response.data);\n                    dispatch({\n                        type: DRIVERS_GET_SUCCESS,\n                        data: response.data\n                      });\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                    resolve(response.data);\n                })\n                .catch(error => {\n                    console.log(\"error in  drivers\", error)\n                    reject(error);\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                })\n                .finally(() => {\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                })\n        });\n    };\n}\n\nexport function getFilterDriver({ page, limit, searchText }) {\n\n    return function (dispatch) {\n        return new Promise(async function (resolve, reject) {\n            dispatch({\n                type: SHOW_LOADER,\n            });\n            const token = localStorage.getItem('auth');\n            let uri =  `/driver/list/?page=${page}&limit=${limit}`;\n            if(searchText){\n                uri = `${uri}&search=${searchText}`\n            }\n            HTTP('get', uri, null, { Authorization: `Bearer ${token}` })\n                .then(function (response) {\n                    console.log(\"response in  drivers ==>>\", response);\n                    dispatch({\n                        type: DRIVERS_EMPTY_SUCCESS\n                      });\n                    dispatch({\n                        type: DRIVERS_GET_SUCCESS,\n                        data: response.data\n                      });\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                    resolve(response.data);\n                })\n                .catch(error => {\n                    console.log(\"error in  drivers\", error)\n                    reject(error);\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                })\n                .finally(() => {\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                })\n        });\n    };\n}\n\nexport function getUserDetails(id) {\n\n    return function (dispatch) {\n        return new Promise(async function (resolve, reject) {\n            dispatch({\n                type: SHOW_LOADER,\n            });\n            let token = localStorage.getItem('auth');\n            HTTP('get', `/driver/details/${id}`, { user_id: id }, { Authorization: `Bearer ${token}` })\n                .then(function (response) {\n                    console.log(\"response in  drivers ==>>\", response);\n                    dispatch({\n                        type: DRIVERS_GET_DETAILS_SUCCESS,\n                        data: response.data\n                      });\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                    resolve(response.data);\n                })\n                .catch(error => {\n                    console.log(\"error in  drivers\", error)\n                    reject(error);\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                })\n                .finally(() => {\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                })\n        });\n    };\n}\n\nexport function getAllBookingManagers({page, limit, searchText}) {\n\n    return function (dispatch) {\n        return new Promise(async function (resolve, reject) {\n            dispatch({\n                type: SHOW_LOADER,\n            });\n            let token = localStorage.getItem('auth');\n            HTTP('get', `/bookings/list/?page=${page}&limit=${limit}&search=${searchText}`, null, { Authorization: `Bearer ${token}` })\n                .then(function (response) {\n                    console.log(\"response in  booking managers ==>>\", response);\n                    dispatch({\n                        type: BOOKING_MANAGER_GET_SUCCESS,\n                        data: response.data\n                      });\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                    resolve(response.data);\n                })\n                .catch(error => {\n                    console.log(\"error in  booking managers\", error)\n                    reject(error);\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                })\n                .finally(() => {\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                })\n        });\n    };\n}\n\nexport function userAnalyticsData() {\n\n    return function (dispatch) {\n        return new Promise(async function (resolve, reject) {\n            dispatch({\n                type: SHOW_LOADER,\n            });\n            const token = localStorage.getItem('auth');\n            HTTP('get', 'admin/userAnalyticsData', null, { Authorization: `Bearer ${token}` })\n                .then(function (response) {\n                    console.log(\"response in  userAnalyticsData ==>>\", response)\n                    resolve(response.data);\n                })\n                .catch(error => {\n                    console.log(\"error in  drivers\", error)\n                    reject(error);\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                })\n                .finally(() => {\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                })\n        });\n    };\n}\n\nexport function saveOnlineUser(drivers) {\n\n    return function (dispatch) {\n        return new Promise(async function (resolve, reject) {\n            dispatch({\n                type: SAVE_ONLINE_USER,\n                data: drivers\n            });\n            resolve({ message: 'online driver save' });\n        });\n    };\n}\n\nexport function deleteDriver(id) {\n\n    return function (dispatch) {\n        return new Promise(async function (resolve, reject) {\n            dispatch({\n                type: SHOW_LOADER,\n            });\n            const token = localStorage.getItem('auth');\n            HTTP('post', `/driver/remove/${id}`, null, { Authorization: `Bearer ${token}` })\n                .then(function (response) {\n                    console.log(\"response in  drivers delete ==>>\", response);\n                    dispatch({\n                        type:DRIVERS_DELETE_SUCCESS,\n                        data : response.data\n                    });\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                    resolve(response.data);\n                })\n                .catch(error => {\n                    console.log(\"error in  drivers delete\", error)\n                    reject(error);\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                })\n                .finally(() => {\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                })\n        });\n    };\n}\n\nexport function getUserActivity(id) {\n\n    return function (dispatch) {\n        return new Promise(async function (resolve, reject) {\n            dispatch({\n                type: SHOW_LOADER,\n            });\n            let token = localStorage.getItem('auth');\n            HTTP('get', 'admin/userActivity/' + id, null, { Authorization: `Bearer ${token}` })\n                .then(function (response) {\n                    console.log(\"response in  userActivityData ==>>\", response)\n                    resolve(response.data);\n                })\n                .catch(error => {\n                    console.log(\"error in  drivers\", error)\n                    reject(error);\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                })\n                .finally(() => {\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                })\n        });\n    };\n}\nexport function getUserStats(id, startDate, endDate) {\n\n    return function (dispatch) {\n        return new Promise(async function (resolve, reject) {\n            dispatch({\n                type: SHOW_LOADER,\n            });\n            let token = localStorage.getItem('auth');\n            HTTP('get', 'admin/driverStats/' + id + \"?dateStart=\" + startDate + \"&dateEnd=\" + endDate, null, { Authorization: `Bearer ${token}` })\n                .then(function (response) {\n                    console.log(\"response in  userStatsData ==>>\", response)\n                    resolve(response.data);\n                })\n                .catch(error => {\n                    console.log(\"error in  drivers\", error)\n                    reject(error);\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                })\n                .finally(() => {\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                })\n        });\n    };\n}\nexport function getUserEvents(id, eventType) {\n\n    return function (dispatch) {\n        return new Promise(async function (resolve, reject) {\n            dispatch({\n                type: SHOW_LOADER,\n            });\n            const token = localStorage.getItem('auth');\n            HTTP('get', 'admin/driverEvents/' + id + '?type=' + eventType, null, { Authorization: `Bearer ${token}` })\n                .then(function (response) {\n                    console.log(\"response in  driverEventsData ==>>\", response)\n                    resolve(response.data);\n                })\n                .catch(error => {\n                    console.log(\"error in  drivers\", error)\n                    reject(error);\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                })\n                .finally(() => {\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                })\n        });\n    };\n}\nexport function getReportDrivers({ page, limit, searchText, university, country }) {\n\n    return function (dispatch) {\n        return new Promise(async function (resolve, reject) {\n            dispatch({\n                type: SHOW_LOADER,\n            });\n            const token = localStorage.getItem('auth');\n            HTTP('get', `/driver/report/list/?page=${page}&limit=${limit}`, null, { Authorization: `Bearer ${token}` })\n                .then(function (response) {\n                    console.log(\"response in reporte  drivers ==>>\", response);\n                    dispatch({\n                        type: REPORT_DRIVERS_GET_SUCCESS,\n                        data: response.data\n                      });\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                    resolve(response.data);\n                })\n                .catch(error => {\n                    console.log(\"error in  drivers\", error)\n                    reject(error);\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                })\n                .finally(() => {\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                })\n        });\n    };\n}\nexport function addDriver(data) {\n    console.log(\"add driver\", data);\n\n    return function (dispatch) {\n        return new Promise(async function (resolve, reject) {\n            dispatch({\n                type: SHOW_LOADER,\n            });\n            let token = localStorage.getItem('auth');\n            HTTP('post', `/driver/add`, data, { Authorization: `Bearer ${token}`  })\n                .then(function (response) {\n                    dispatch({\n                        type:DRIVERS_EMPTY_SUCCESS\n                    });\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                    resolve(response.data);\n                })\n                .catch(error => {\n                    reject(error);\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                })\n                .finally(() => {\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                })\n        });\n    };\n}\n\nexport function updateDriver({id,data}) {\n    console.log(\"update driver\",id, data);\n\n    return function (dispatch) {\n        return new Promise(async function (resolve, reject) {\n            dispatch({\n                type: SHOW_LOADER,\n            });\n            let token = localStorage.getItem('auth');\n            HTTP('post', `/driver/update/${id}`, data, { Authorization: `Bearer ${token}` })\n                .then(function (response) {\n                    dispatch({\n                        type:DRIVERS_EMPTY_SUCCESS\n                    });\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                    resolve(response.data);\n                })\n                .catch(error => {\n                    reject(error);\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                })\n                .finally(() => {\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                })\n        });\n    };\n}","import { HTTP } from '../utils/HTTP';\n\nimport {\n    BUS_GET_SUCCESS,\n    SHOW_LOADER,\n    HIDE_LOADER,\n    BUS_EMPTY_SUCCESS,\n    BUS_DELETE_SUCCESS,\n    BUS_GET_DETAILS_SUCCESS,\n} from '../constants/actionTypes';\n\n\nexport function getAllBus({ page, limit, searchText }) {\n\n    return function (dispatch) {\n        return new Promise(async function (resolve, reject) {\n            dispatch({\n                type: SHOW_LOADER,\n            });\n            const token = localStorage.getItem('auth');\n            let uri =  `/bus/list/?page=${page}&limit=${limit}`;\n            if(searchText){\n                uri = `${uri}&search=${searchText}`\n            }\n            HTTP('get',uri, null, { Authorization: `Bearer ${token}` })\n                .then(function (response) {\n                    console.log(\"response in  buses ==>>\", response.data);\n                    dispatch({\n                        type: BUS_GET_SUCCESS,\n                        data: response.data\n                      });\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                    resolve(response.data);\n                })\n                .catch(error => {\n                    console.log(\"error in  buses\", error)\n                    reject(error);\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                })\n                .finally(() => {\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                })\n        });\n    };\n}\n\nexport function getFilterBus({ page, limit, searchText }) {\n\n    return function (dispatch) {\n        return new Promise(async function (resolve, reject) {\n            dispatch({\n                type: SHOW_LOADER,\n            });\n            const token = localStorage.getItem('auth');\n            let uri =  `/bus/list/?page=${page}&limit=${limit}`;\n            if(searchText){\n                uri = `${uri}&search=${searchText}`\n            }\n            HTTP('get', uri, null, { Authorization: `Bearer ${token}` })\n                .then(function (response) {\n                    console.log(\"response in  buses ==>>\", response);\n                    dispatch({\n                        type: BUS_EMPTY_SUCCESS\n                      });\n                    dispatch({\n                        type: BUS_GET_SUCCESS,\n                        data: response.data\n                      });\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                    resolve(response.data);\n                })\n                .catch(error => {\n                    console.log(\"error in  buses\", error)\n                    reject(error);\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                })\n                .finally(() => {\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                })\n        });\n    };\n}\n\nexport function getUserDetails(id) {\n\n    return function (dispatch) {\n        return new Promise(async function (resolve, reject) {\n            dispatch({\n                type: SHOW_LOADER,\n            });\n            let token = localStorage.getItem('auth');\n            HTTP('get', `/bus/details/${id}`, { user_id: id }, { Authorization: `Bearer ${token}` })\n                .then(function (response) {\n                    console.log(\"response in  buses ==>>\", response);\n                    dispatch({\n                        type: BUS_GET_DETAILS_SUCCESS,\n                        data: response.data\n                      });\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                    resolve(response.data);\n                })\n                .catch(error => {\n                    console.log(\"error in  buses\", error)\n                    reject(error);\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                })\n                .finally(() => {\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                })\n        });\n    };\n}\n\nexport function deleteBus(id) {\n\n    return function (dispatch) {\n        return new Promise(async function (resolve, reject) {\n            dispatch({\n                type: SHOW_LOADER,\n            });\n            const token = localStorage.getItem('auth');\n            HTTP('post', `/bus/remove/${id}`, null, { Authorization: `Bearer ${token}` })\n                .then(function (response) {\n                    console.log(\"response in  buses delete ==>>\", response);\n                    dispatch({\n                        type:BUS_DELETE_SUCCESS,\n                        data : response.data\n                    });\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                    resolve(response.data);\n                })\n                .catch(error => {\n                    console.log(\"error in  buses delete\", error)\n                    reject(error);\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                })\n                .finally(() => {\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                })\n        });\n    };\n}\n\nexport function getUserActivity(id) {\n\n    return function (dispatch) {\n        return new Promise(async function (resolve, reject) {\n            dispatch({\n                type: SHOW_LOADER,\n            });\n            let token = localStorage.getItem('auth');\n            HTTP('get', 'admin/userActivity/' + id, null, { Authorization: `Bearer ${token}` })\n                .then(function (response) {\n                    console.log(\"response in  userActivityData ==>>\", response)\n                    resolve(response.data);\n                })\n                .catch(error => {\n                    console.log(\"error in  buses\", error)\n                    reject(error);\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                })\n                .finally(() => {\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                })\n        });\n    };\n}\n\nexport function addBus(data) {\n    console.log(\"add Bus\", data);\n\n    return function (dispatch) {\n        return new Promise(async function (resolve, reject) {\n            dispatch({\n                type: SHOW_LOADER,\n            });\n            let token = localStorage.getItem('auth');\n            HTTP('post', `/bus/add`, data, { Authorization: `Bearer ${token}`  })\n                .then(function (response) {\n                    dispatch({\n                        type:BUS_EMPTY_SUCCESS\n                    });\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                    resolve(response.data);\n                })\n                .catch(error => {\n                    reject(error);\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                })\n                .finally(() => {\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                })\n        });\n    };\n}\n\nexport function updateBus({id,data}) {\n    console.log(\"update Bus\",id, data);\n\n    return function (dispatch) {\n        return new Promise(async function (resolve, reject) {\n            dispatch({\n                type: SHOW_LOADER,\n            });\n            let token = localStorage.getItem('auth');\n            HTTP('post', `/bus/update/${id}`, data, { Authorization: `Bearer ${token}` })\n                .then(function (response) {\n                    dispatch({\n                        type:BUS_EMPTY_SUCCESS\n                    });\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                    resolve(response.data);\n                })\n                .catch(error => {\n                    reject(error);\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                })\n                .finally(() => {\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                })\n        });\n    };\n}","import { HTTP } from '../utils/HTTP';\n\nimport {\n    SHOW_LOADER,\n    HIDE_LOADER,\n    DASHBOARD_STATS_GET_SUCCESS,\n    TOGGLE_SIDEBAR\n} from './../constants/actionTypes';\n\nexport function getDashboardStats() {\n\n    return function (dispatch) {\n        return new Promise(async function (resolve, reject) {\n            dispatch({\n                type: SHOW_LOADER,\n            });\n            let token = localStorage.getItem('auth');\n            HTTP('get', `/dashboard/stats`, null, { Authorization: `Bearer ${token}` })\n                .then(function (response) {\n                    console.log(\"response in dashboard ==>>\", response);\n                    dispatch({\n                        type: DASHBOARD_STATS_GET_SUCCESS,\n                        data: response.data\n                      });\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                    resolve(response.data);\n                })\n                .catch(error => {\n                    console.log(\"error in  dasboard\", error)\n                    reject(error);\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                })\n                .finally(() => {\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                })\n        });\n    };\n}\n\nexport function minimizeSideBar(toggle) {\n    console.log('======TOGLE',toggle);\n    return function(dispatch){\n        return new Promise(async function (resolve, reject) {\n            dispatch({\n                type: TOGGLE_SIDEBAR,\n                data: toggle\n            });\n        });\n    }\n}","import { HTTP } from '../utils/HTTP';\n\nimport {\n    SHIFT_GET_SUCCESS,\n    SHOW_LOADER,\n    HIDE_LOADER,\n    SHIFT_EMPTY_SUCCESS,\n    SHIFT_DELETE_SUCCESS,\n    SHIFT_GET_DETAILS_SUCCESS,\n} from '../constants/actionTypes';\n\n\nexport function getAllShift({ page, limit, searchText }) {\n\n    return function (dispatch) {\n        return new Promise(async function (resolve, reject) {\n            dispatch({\n                type: SHOW_LOADER,\n            });\n            const token = localStorage.getItem('auth');\n            let uri =  `/shift/list/?page=${page}&limit=${limit}`;\n            if(searchText){\n                uri = `${uri}&search=${searchText}`\n            }\n            HTTP('get',uri, null, { Authorization: `Bearer ${token}` })\n                .then(function (response) {\n                    console.log(\"response in  shift ==>>\", response.data);\n                    dispatch({\n                        type: SHIFT_GET_SUCCESS,\n                        data: response.data\n                      });\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                    resolve(response.data);\n                })\n                .catch(error => {\n                    console.log(\"error in  shift\", error)\n                    reject(error);\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                })\n                .finally(() => {\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                })\n        });\n    };\n}\n\nexport function getFilterShift({ page, limit, searchText }) {\n\n    return function (dispatch) {\n        return new Promise(async function (resolve, reject) {\n            dispatch({\n                type: SHOW_LOADER,\n            });\n            const token = localStorage.getItem('auth');\n            let uri =  `/shift/list/?page=${page}&limit=${limit}`;\n            if(searchText){\n                uri = `${uri}&search=${searchText}`\n            }\n            HTTP('get', uri, null, { Authorization: `Bearer ${token}` })\n                .then(function (response) {\n                    console.log(\"response in  buses ==>>\", response);\n                    dispatch({\n                        type: SHIFT_EMPTY_SUCCESS\n                      });\n                    dispatch({\n                        type: SHIFT_GET_SUCCESS,\n                        data: response.data\n                      });\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                    resolve(response.data);\n                })\n                .catch(error => {\n                    console.log(\"error in  buses\", error)\n                    reject(error);\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                })\n                .finally(() => {\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                })\n        });\n    };\n}\n\nexport function getShiftDetails(id) {\n\n    return function (dispatch) {\n        return new Promise(async function (resolve, reject) {\n            dispatch({\n                type: SHOW_LOADER,\n            });\n            let token = localStorage.getItem('auth');\n            HTTP('get', `/shift/details/${id}`, { user_id: id }, { Authorization: `Bearer ${token}` })\n                .then(function (response) {\n                    console.log(\"response in  buses ==>>\", response);\n                    dispatch({\n                        type: SHIFT_GET_DETAILS_SUCCESS,\n                        data: response.data\n                      });\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                    resolve(response.data);\n                })\n                .catch(error => {\n                    console.log(\"error in  buses\", error)\n                    reject(error);\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                })\n                .finally(() => {\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                })\n        });\n    };\n}\n\nexport function deleteShift(id) {\n\n    return function (dispatch) {\n        return new Promise(async function (resolve, reject) {\n            dispatch({\n                type: SHOW_LOADER,\n            });\n            const token = localStorage.getItem('auth');\n            HTTP('post', `/shift/remove/${id}`, null, { Authorization: `Bearer ${token}` })\n                .then(function (response) {\n                    console.log(\"response in  buses delete ==>>\", response);\n                    dispatch({\n                        type:SHIFT_DELETE_SUCCESS,\n                        data : response.data\n                    });\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                    resolve(response.data);\n                })\n                .catch(error => {\n                    console.log(\"error in  buses delete\", error)\n                    reject(error);\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                })\n                .finally(() => {\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                })\n        });\n    };\n}\n\nexport function getUserActivity(id) {\n\n    return function (dispatch) {\n        return new Promise(async function (resolve, reject) {\n            dispatch({\n                type: SHOW_LOADER,\n            });\n            let token = localStorage.getItem('auth');\n            HTTP('get', 'admin/userActivity/' + id, null, { Authorization: `Bearer ${token}` })\n                .then(function (response) {\n                    console.log(\"response in  userActivityData ==>>\", response)\n                    resolve(response.data);\n                })\n                .catch(error => {\n                    console.log(\"error in  buses\", error)\n                    reject(error);\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                })\n                .finally(() => {\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                })\n        });\n    };\n}\n\nexport function addShift(data) {\n    console.log(\"add Bus\", data);\n\n    return function (dispatch) {\n        return new Promise(async function (resolve, reject) {\n            dispatch({\n                type: SHOW_LOADER,\n            });\n            let token = localStorage.getItem('auth');\n            HTTP('post', `/shift/add`, data, { Authorization: `Bearer ${token}`  })\n                .then(function (response) {\n                    dispatch({\n                        type:SHIFT_EMPTY_SUCCESS\n                    });\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                    resolve(response.data);\n                })\n                .catch(error => {\n                    reject(error);\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                })\n                .finally(() => {\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                })\n        });\n    };\n}\n\nexport function updateShift({id,data}) {\n    console.log(\"update Bus\",id, data);\n\n    return function (dispatch) {\n        return new Promise(async function (resolve, reject) {\n            dispatch({\n                type: SHOW_LOADER,\n            });\n            let token = localStorage.getItem('auth');\n            HTTP('post', `/shift/update/${id}`, data, { Authorization: `Bearer ${token}` })\n                .then(function (response) {\n                    dispatch({\n                        type:SHIFT_EMPTY_SUCCESS\n                    });\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                    resolve(response.data);\n                })\n                .catch(error => {\n                    reject(error);\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                })\n                .finally(() => {\n                    dispatch({\n                        type: HIDE_LOADER,\n                    });\n                })\n        });\n    };\n}"],"sourceRoot":""}