{"version":3,"sources":["views/drivers/Drivers.js"],"names":["connect","state","console","log","drivers","loader","basicCodes","peerGroups","allDrivers","isLoading","loading","dispatch","actions","bindActionCreators","_getAllDrivers","data","getAllDrivers","_getFilterDriver","getFilterDriver","_addDriver","addDriver","_deleteDriver","deleteDriver","_updateDriver","updateDriver","props","Form","useForm","history","useHistory","queryPage","useLocation","search","match","currentPage","Number","useState","page","setPage","limit","searchText","setSearchText","isEditingDriver","editingDriverId","openModal","driverName","driverPhone","setState","useEffect","getDrivers","initState","_page","response","_searchByText","onDeleteDriver","driver","_id","notification","message","placement","handleOk","name","phone","id","slice","userDataArray","totalPage","pages","itemsPerPage","xl","xs","md","onChange","e","target","value","placeholder","ghost","onClick","type","style","float","marginBottom","items","size","fields","key","_classes","_style","padding","width","label","hover","striped","activePage","clickableRows","scopedSlots","item","moment","created","format","onEdit","Modal","confirm","title","okText","okType","cancelText","onOk","onCancel","error","showDeleteDialog","marginLeft","onActivePageChange","newPage","push","doubleArrows","align","visible","footer"],"mappings":"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","file":"static/js/58.063c3e8d.chunk.js","sourcesContent":["import React, { useState, useEffect, lazy } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from 'redux';\nimport { getAllDrivers, getFilterDriver, addDriver, deleteDriver, updateDriver } from '../../actions/drivers';\nimport moment from 'moment';\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CPagination,\n  CInput,\n} from '@coreui/react';\nimport { Button, Modal, Form, notification, Input } from 'antd';\n\n\nconst getBadge = status => {\n  switch (status) {\n    case 'Verified': return 'success'\n    case 'Unverified': return 'warning'\n    default: return 'primary'\n  }\n}\n\nconst Drivers = (props) => {\n  const [form] = Form.useForm();\n  const formRef = React.createRef();\n  console.log('Props in User', props);\n  const history = useHistory()\n  const queryPage = useLocation().search.match(/page=([0-9]+)/, '')\n  const currentPage = Number(queryPage && queryPage[1] ? queryPage[1] : 1)\n  const [page, setPage] = useState(currentPage)\n  const [limit, setLimit] = useState(10)\n  const [searchText, setSearchText] = useState(null);\n  const [state, setState] = useState({\n    isEditingDriver: false,\n    editingDriverId: null,\n    openModal: false,\n    driverName: '',\n    driverPhone: ''\n  });\n\n  const layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n  };\n\n  const pageChange = newPage => {\n    currentPage !== newPage && history.push(`/drivers?page=${newPage}`)\n    setPage(newPage);\n    getDrivers(newPage);\n  }\n\n  useEffect(() => {\n    currentPage !== page && setPage(currentPage);\n    getDrivers(page);\n  }, []);\n\n\n  const initState = () => {\n    setState({\n      isEditingDriver: false,\n      editingDriverId: null,\n      driverName: '',\n      driverPhone: '',\n      openModal: false,\n    })\n  }\n  const getDrivers = async (_page) => {\n    try {\n      const data = {\n        page: _page, limit, searchText,\n      }\n      const response = await props.actions._getAllDrivers(data);\n\n      console.log('========> get all user repsonse', response);\n    } catch (error) {\n      console.log(\"Error in get list\", error);\n    }\n\n  }\n\n  const _searchByText = async ()=>{\n    const data = {\n      page: page,\n      limit,\n      searchText,\n    }\n    const response = await props.actions._getFilterDriver(data);\n  }\n\n  const showModal = () => {\n    setState({\n      ...state,\n      openModal: true\n    });\n  }\n\n  const onEdit = (item) => {\n    console.log('---------item',item);\n    setState({\n      ...state,\n      driverName: item.name,\n      driverPhone: item.phone,\n      editingDriverId: item._id,\n      isEditingDriver: true,\n      openModal: true,\n    })\n  }\n\n\n  const showDeleteDialog = (item) => {\n    try {\n        Modal.confirm({\n          title: 'Are you sure delete this driver?',\n          okText: 'Yes',\n          okType: 'danger',\n          cancelText: 'No',\n          onOk: () => onDeleteDriver(item),\n          onCancel() {\n            console.log('Cancel');\n          },\n        });\n\n    } catch (error) {\n\n    }\n  }\n\n  const onDeleteDriver = async (driver) => {\n    try {\n      const removeDriver = await props.actions._deleteDriver(driver._id);\n      // getDrivers(currentPage);\n      initState();\n    } catch (error) {\n      console.log(error);\n      notification['error']({\n         message: (error.response && error.response.data) ?  error.response.data.message : 'something went wrong',\n         placement:'bottomRight',\n      });\n      initState();\n    }\n\n  }\n\n  const handleOk = async () => {\n    try {\n\n      if (state.isEditingDriver) {\n        const data = {\n          name: state.driverName,\n          phone: state.driverPhone,\n        };\n        const updateResponse = await props.actions._updateDriver({ id: state.editingDriverId, data });\n        getDrivers(currentPage);\n        initState();\n      } else {\n        \n        const data = {\n          name: state.driverName,\n          phone: `92${state.driverPhone.slice(1)}`\n        };\n        const addStrengthResponse  = await props.actions._addDriver(data);\n        getDrivers(currentPage);\n        initState();\n      }\n    } catch (error) {\n      console.log(error);\n      notification['error']({\n         message: (error.response && error.response.data) ?  error.response.data.message : 'something went wrong',\n         placement:'bottomRight',\n      });\n      initState();\n    }\n\n  }\n\n  const userDataArray = (props.allDrivers && props.allDrivers.data) ? props.allDrivers.data : [];\n  const totalPage = (props.allDrivers && props.allDrivers.pages) ? props.allDrivers.pages : 1;\n  const itemsPerPage = (props.allDrivers && props.allDrivers.limit) ? props.allDrivers.limit : 10;\n  console.log('========userDataArray', userDataArray, totalPage, itemsPerPage);\n\n  return (\n    <>\n      <CCard>\n        <CCardBody>\n          <CRow>\n            <CCol xl={12}>\n              <CCard>\n                <CCardHeader>\n                  Drivers\n                </CCardHeader>\n                <CCardBody>\n                  <CRow>\n                    <CCol xs=\"12\" md=\"6\">\n                      <CRow>\n                        <CCol xs=\"12\" md=\"6\">\n                        <CInput onChange={(e)=>setSearchText(e.target.value)} id=\"company\" placeholder=\"Name/Phone\" />\n                        </CCol>\n                        <CCol xs=\"12\" md=\"6\">\n                          <Button ghost onClick={_searchByText}  type='primary'>Search</Button>\n                        </CCol>\n                      </CRow>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"6\">\n                      <Button type=\"primary\" onClick={showModal} style={{ float: 'right', marginBottom: '18px' }} ghost>Add</Button>\n                    </CCol>\n                  </CRow>\n                  <CDataTable\n                    items={userDataArray}\n                    loading={props.isLoading}\n                    size='lg'\n                    fields={[\n                      { key: 'name', _classes: 'font-weight-bold', _style: { padding: '0px 30px', width: '250px' } },\n                      // 'email',\n                      { key: 'phone', label: 'Number' },\n                      // 'location',\n                      // { key: 'signUpVerificationStatus', label: 'Status' },\n                      // { key: 'selected_peer_group', label: 'Selected Peer Group', _style: { width: '250px' } },\n                      { key: 'created', label: 'Created', _style: { width: '300px' } },\n                      'actions'\n                    ]}\n                    hover\n                    striped\n                    itemsPerPage={itemsPerPage}\n                    activePage={page}\n                    clickableRows\n                    scopedSlots={{\n                        'created':\n                        (item) => (\n                          <td>\n                              {moment(item.created).format('Do MMM YYYY hh:mm a')}\n                          </td>\n                        ),\n                        'actions':\n                        (item) => (\n                          <td>\n                            <div>\n                              <Button type=\"primary\" onClick={() => onEdit(item)} ghost>Edit</Button>\n                              <Button type=\"danger\" onClick={() => showDeleteDialog(item)} style={{ marginLeft: '5px' }} ghost>Delete</Button>\n                            </div>\n                          </td>\n                        ),\n                    }}\n                  />\n                  <CPagination\n                    activePage={page}\n                    onActivePageChange={pageChange}\n                    pages={totalPage}\n                    doubleArrows={false}\n                    align=\"center\"\n                  />\n                </CCardBody>\n              </CCard>\n              <Modal\n                visible={state.openModal}\n                title=\"Driver\"\n                onCancel={initState}\n                footer={[\n                  state.isEditingDriver ?\n                    <Button key=\"submit\" type=\"primary\" ghost loading={props.isLoading} size=\"large\" onClick={handleOk}>Update</Button>\n                    :\n                    <Button key=\"submit\" type=\"primary\" ghost loading={props.isLoading} size=\"large\" onClick={handleOk}>Add</Button>\n                ]}\n              >\n                <CRow>\n                  <CCol xs=\"12\" md=\"6\">\n                    <CRow>\n                      <CCol xs=\"12\" md=\"12\">\n                        <CInput style={{ marginBottom: '20px' }} value={state.driverName} name='driverName' onChange={(e) => setState({ ...state, driverName: e.target.value })} placeholder='Enter a driver name' />\n                      </CCol>\n                    </CRow>\n                    <CRow>\n                      <CCol xs=\"12\" md=\"12\">\n                      <CInput value={state.driverPhone} name='driverPhone' onChange={(e) => setState({ ...state, driverPhone: e.target.value })} placeholder='Enter a driver phone' />\n                      </CCol>\n                    </CRow>\n                  </CCol>\n                </CRow>\n              </Modal>\n            </CCol>\n          </CRow>\n        </CCardBody>\n      </CCard>\n    </>\n  )\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({\n      _getAllDrivers: (data) => getAllDrivers(data),\n      _getFilterDriver: (data) => getFilterDriver(data),\n      _addDriver: (data) => addDriver(data),\n      _deleteDriver: (data) => deleteDriver(data),\n      _updateDriver: (data) => updateDriver(data),\n    }, dispatch)\n  }\n}\n\nfunction mapStateToProps(state) {\n  console.log(\"==========> Driver\",state);\n  const { drivers, basicCodes, peerGroups, loader } = state;\n  return {\n    allDrivers: drivers.allDrivers,\n    isLoading: loader.loading\n\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Drivers);\n"],"sourceRoot":""}